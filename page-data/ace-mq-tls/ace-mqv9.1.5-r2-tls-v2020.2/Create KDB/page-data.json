{"componentChunkName":"component---src-templates-docs-js","path":"/ace-mq-tls/ace-mqv9.1.5-r2-tls-v2020.2/Create KDB","result":{"data":{"site":{"siteMetadata":{"title":"Cloud Pak for Integration | IBM","docsLocation":"https://github.com/ibm-cloud-architecture/cloudpak-for-integration"}},"mdx":{"fields":{"id":"a91ef952-c693-57d1-ba5f-1e58976c5926","title":"Create KDB","slug":"/ace-mq-tls/ace-mqv9.1.5-r2-tls-v2020.2/Create KDB"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Step 1: Create self signed certs for server and client\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create a directory to hold your new certificates and keys then cd into it:\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cd /Users/danielorlan/tutorials/mq/ssl\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create self signed certs for the server\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"openssl req -newkey rsa:2048 -nodes -keyout server.key -x509 -days 365 -out server.crt\"))), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"You will be asked to fill in the DN next I used these values:\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"pre\", {\n    parentName: \"blockquote\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Country Name (2 letter code) []:US\\nState or Province Name (full name) []:NY\\nLocality Name (eg, city) []:NY\\nOrganization Name (eg, company) []:IBM\\nOrganizational Unit Name (eg, section) []:CPAT\\nCommon Name (eg, fully qualified host name) []:com.ibm.com\\nEmail Address []:daniel.orlan@ibm.com\\n\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create self signed cert for the client\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"openssl req -newkey rsa:2048 -nodes -keyout client.key -x509 -days 365 -out client.crt\"))), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"You will be asked to fill in the DN next I used these values:\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"pre\", {\n    parentName: \"blockquote\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"Country Name (2 letter code) []:US\\nState or Province Name (full name) []:NY\\nLocality Name (eg, city) []:NY\\nOrganization Name (eg, company) []:IBM\\nOrganizational Unit Name (eg, section) []:CPAT\\nCommon Name (eg, fully qualified host name) []:com.ibm.com\\nEmail Address []:daniel.orlan@ibm.com\\n\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Your directory should now have 4 files:\"), mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"client.crt\"), \" (the clients \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"public certificate\"), \")\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"client.key\"), \"\\t(the clients \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"private key\"), \")\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"server.crt\"), \"\\t(the servers \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"public certificate\"), \")\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"server.key\"), \" (the servers \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"private key\"), \")\")))), mdx(\"h1\", null, \"Step 2: Create a p12 file for the client\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Use the clients private key and public cert to create a pkcs12 file\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"openssl pkcs12 -export -in client.crt -inkey client.key -out client.p12 -name \\\"client pkcs12\\\"\"))), mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Enter password: \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"passw0rd\"), \" when prompted\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Use these commands to verify the p12 looks good:\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"keytool -list -v -keystore client.p12 -storepass passw0rd\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"View the certificate:\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"openssl pkcs12 -info -in client.p12\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"View the private key:\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"openssl pkcs12 -in client.p12 -nocerts -nodes\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Your directory should now have an additional file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"client.p12\")))), mdx(\"h1\", null, \"Step 3: Create the KDB file\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Run MQ in a docker Image:\", mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"docker run --rm -e LICENSE=accept \\\\\\n    --volume /Users/danielorlan/tutorials/mq/ssl:/mnt/certs \\\\\\n    --detach \\\\\\n    ibmcom/mq:latest\\n\")))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"--volume /Users/danielorlan/tutorials/mq/ssl:/mnt/certs\"), \" the directory we created before which contains all keys and certs will be mounted inside the container to \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"mnt/certs\"))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Get the GUID for the running container and exec into it: \"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"docker exec -it 12f \\\\bin\\\\bash\"))))), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Create the kdb file named: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mq-secure.kdb\"), \" with password: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"passw0rd\")), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"runmqakm -keydb -create -db mq-secure.kdb -pw passw0rd -type cms -expire 1000 -stash\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Import the server's public certificate into the client key database:\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"runmqakm -cert -add -label mqserver -db mq-secure.kdb -pw passw0rd -trust enable -file server.crt\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Import the client's p12 file into the client key database and label it \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ibmwebspheremquser\"), \" :\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"runmqckm -cert -import -file client.p12 -pw passw0rd -type pkcs12 -target mq-secure.kdb -target_pw passw0rd -target_type cms -label \\\"client pkcs12\\\" -new_label ibmwebspheremquser\"), \" \"))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"View the contentes of the kdb file\"), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"runmqakm -cert -list all -db mq-secure.kdb -stashed\"))), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"runmqakm -cert -details -db mq-secure.kdb -stashed -label mqserver\"))), mdx(\"blockquote\", {\n    parentName: \"li\"\n  }, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"runmqakm -cert -details -db mq-secure.kdb -stashed -label ibmwebspheremquser\")))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Provide these files to MQ C Client to enable SSL mutual authentication\\n1) \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mq-secure.kdb\"), \"  (the key databse file)\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"2) \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"mq-secure.sth\"), \" (the stash file containing the password for the kdb)\"))));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#step-1-create-self-signed-certs-for-server-and-client","title":"Step 1: Create self signed certs for server and client"},{"url":"#step-2-create-a-p12-file-for-the-client","title":"Step 2: Create a p12 file for the client"},{"url":"#step-3-create-the-kdb-file","title":"Step 3: Create the KDB file"}]},"parent":{"__typename":"File","relativePath":"ace-mq-tls/ace-mqv9.1.5-r2-tls-v2020.2/Create KDB.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/codeblock","title":"Syntax Highlighting"}}},{"node":{"fields":{"slug":"/","title":"Landing Page"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/apic/apic-cli","title":"Apic Cli"}}},{"node":{"fields":{"slug":"/apic/apic-use-case-resources","title":"Apic Use Case Resources"}}},{"node":{"fields":{"slug":"/apic/third-part-oauth-okta","title":"Third Part Oauth Okta"}}},{"node":{"fields":{"slug":"/codeblock/1-index.md","title":"Sub Page"}}},{"node":{"fields":{"slug":"/es-stretch-cluster-sol/README","title":"README"}}},{"node":{"fields":{"slug":"/mq-portworx/multiinstance","title":"Multiinstance"}}},{"node":{"fields":{"slug":"/mq-uniform-cluster/README","title":"README"}}},{"node":{"fields":{"slug":"/ace-es/ace-esv10-v2020.2/ace-esv10-v2020.2","title":"Ace Esv 10 V 2020 2"}}},{"node":{"fields":{"slug":"/ace-mq-tls/ace-mqv9.1.5-r2-tls-v2020.2/Create KDB","title":"Create KDB"}}},{"node":{"fields":{"slug":"/ace-mq-tls/ace-mqv9.1.5-r2-tls-v2020.2/ace-mqv9.1.5-r2-tls-v2020.2","title":"Ace Mqv 9 1 5 R 2 Tls V 2020 2"}}},{"node":{"fields":{"slug":"/ace-oracledb/ace-oracledb-v2020.2/ace-oracledb-v2020.2","title":"Ace Oracledb V 2020 2"}}},{"node":{"fields":{"slug":"/ace-soap-create-route-ocp/ace-soap-v2020.2/ace-soap-v2020.2","title":"Ace Soap V 2020 2"}}},{"node":{"fields":{"slug":"/apic-v10-eks/README","title":"README"}}},{"node":{"fields":{"slug":"/es-mq/esv10-mq-v2020.2/esv10-mq-v2020.2","title":"Esv 10 Mq V 2020 2"}}}]}},"pageContext":{"id":"a91ef952-c693-57d1-ba5f-1e58976c5926"}},"staticQueryHashes":["2619113677","2619113677","3706406642","3706406642","417421954","417421954"]}
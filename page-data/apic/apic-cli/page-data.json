{"componentChunkName":"component---src-templates-docs-js","path":"/apic/apic-cli","result":{"data":{"site":{"siteMetadata":{"title":"Cloud Pak for Integration | IBM","docsLocation":"https://github.com/ibm-cloud-architecture/cloudpak-for-integration"}},"mdx":{"fields":{"id":"2de08cf3-6b61-5ab7-a6de-92fb65fb4421","title":"Apic Cli","slug":"/apic/apic-cli"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h3\", null, \"APIC CLI Cheatsheet\"), mdx(\"p\", null, \"This is intended to be a cheatsheet and quick reference for working with the APIC CLI tool. Always refer to the knowledge center if more details are needed \"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.ibm.com/support/knowledgecenter/SSMNED_v10/com.ibm.apic.toolkit.doc/tapim_cli_install.html\"\n  }), \"https://www.ibm.com/support/knowledgecenter/SSMNED_v10/com.ibm.apic.toolkit.doc/tapim_cli_install.html\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.ibm.com/support/knowledgecenter/SSMNED_v10/com.ibm.apic.toolkit.doc/capim-toolkit-cli-overiew.html\"\n  }), \"https://www.ibm.com/support/knowledgecenter/SSMNED_v10/com.ibm.apic.toolkit.doc/capim-toolkit-cli-overiew.html\")), mdx(\"p\", null, mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Table of Contents\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#apic-cli-cheatsheet\"\n  }), \"APIC CLI Cheatsheet\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#scripting-commands\"\n  }), \"Scripting Commands\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#login\"\n  }), \"Login\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#realm\"\n  }), \"Realm\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#api-manager\"\n  }), \"API Manager\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#cloud-manager\"\n  }), \"Cloud Manager\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#sso-oidc-registry-types\"\n  }), \"SSO (OIDC Registry Types)\")))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#working-with-apis\"\n  }), \"Working with APIs\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#creating-draft-api\"\n  }), \"Creating Draft API\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#creating-draft-product-and-publishing\"\n  }), \"Creating Draft Product and Publishing\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#replacing-the-product\"\n  }), \"Replacing the Product\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#create-another-new-apiproduct\"\n  }), \"Create Another New API/Product\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#download-apis-and-products\"\n  }), \"Download APIs and Products\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#add-third-oauth-provider\"\n  }), \"Add Third OAuth Provider\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"#cloud-manager-mail-server\"\n  }), \"Cloud Manager Mail Server\"))), mdx(\"h3\", null, \"Scripting Commands\"), mdx(\"p\", null, \"First run before running commands with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"apic\"), \" CLI for the first time.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"apic --accept-license\\n\")), mdx(\"p\", null, \"Gather your URLs and other often referenced values and set them as variables for convenience.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"api_mgmt='manager.apic-v10.ibm.com'\\ncloud_mgmt='admin.apic-v10.ibm.com'\\ncatalog='sandbox'\\norg='shellorg'\\n\\nusername=<APIM_USERNAME>\\npassword=<APIM_PASSWORD>\\n\")), mdx(\"h3\", null, \"Login\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.ibm.com/support/knowledgecenter/SSMNED_v10/com.ibm.apic.toolkit.doc/rapic_cli_login.html#rapic_cli_login__determine_idp\"\n  }), \"https://www.ibm.com/support/knowledgecenter/SSMNED_v10/com.ibm.apic.toolkit.doc/rapic_cli_login.html#rapic_cli_login__determine_idp\")), mdx(\"h4\", null, \"Realm\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Realm for API Manager local user registry: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"provider/default-idp-2\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Realm for Cloud Manager local user registry: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"admin/default-idp-1\"))), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"apic client-creds:set ./eks3node-creds.json\")), mdx(\"h4\", null, \"API Manager\"), mdx(\"p\", null, \"Manual Login with Local User\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"apic login --server $api_mgmt --username $username --password $password --realm provider/default-idp-2\")), mdx(\"h4\", null, \"Cloud Manager\"), mdx(\"p\", null, \"Realm for local user registry: \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"admin/default-idp-1\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"cm_username=<CMGR_USERNAME>\\ncm_password=<CMGR_PASSWORD>\\napic login --server $cloud_mgmt --username $cm_username --$cm_password --realm admin/default-idp-1\\n\")), mdx(\"h4\", null, \"SSO (OIDC Registry Types)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"apic login --server $api_mgmt --sso\\n\")), mdx(\"p\", null, \"When prompted for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Context?\"), \", type \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"provider\"), \". Then open the browser and login with the OIDC user account. Paste in API key in the terminal after successful login in the browser.\"), mdx(\"p\", null, \"Note: if you don't get the API key screen after logging in and instead APIC looks like it logs you in regularly, try a different browswer or clearly your cache.\"), mdx(\"h3\", null, \"Working with APIs\"), mdx(\"h3\", null, \"Creating Draft API\"), mdx(\"p\", null, \"Get List of APIs in Sandbox catalog\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"apic apis:list-all --scope catalog --server $api_mgmt --catalog $catalog --org $org\\n\")), mdx(\"p\", null, \"Create a draft of an API. This will create the API in API Manager but it is not associated with any products yet.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"apic draft-apis:create --server $api_mgmt --org $org example-yamls/find-branch-api-1.0.0.yaml\\n\")), mdx(\"h3\", null, \"Creating Draft Product and Publishing\"), mdx(\"p\", null, \"Get List of Products\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"apic products:list-all --server $api_mgmt --org $org --catalog $catalog --scope catalog\\n\")), mdx(\"p\", null, \"Create a draft of a product containing the above API\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"apic draft-products:create --server $api_mgmt --org $org example-yamls/branch-product-1.0.0.yaml\\n\")), mdx(\"p\", null, \"Publish the draft product above. The CLI \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"product:publish\"), \" requires the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"$ref\"), \" to the API yaml in order\\nto publish the product (but not for draft)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"apic products:publish --server $api_mgmt --catalog $catalog --org $org example-yamls/branch-product-1.0.0.yaml\\n\")), mdx(\"h3\", null, \"Replacing the Product\"), mdx(\"p\", null, \"Now a product containing the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"1.0.0\"), \" of the API is published. Note that the 1.0.0 find branch API is pointing to an improper backend URL. So let's say we've created find branch 2.0.0 to update the backend URL so that it works properly, and we'll replace the product with the new version, so subscriptions will migrate automatically.\"), mdx(\"p\", null, \"We first create draft of the new version API and create a new draft a product that references the new API.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"# Create a new draft API\\napic draft-apis:create --server $api_mgmt --org $org example-yamls/find-branch-api-2.0.0.yaml\\n\\n# Create a new draft product\\napic draft-products:create --server $api_mgmt --org $org example-yamls/branch-product-2.0.0.yaml\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"# Grab the previously published product (in this case we're interested in find-branch-product:1.0.0)\\nproduct_url=$(apic products:list-all --server $api_mgmt --org $org --catalog $catalog --scope catalog | grep 'find-branch-product:1.0.0.*published' | awk '{print $4}')\\n\\nproduct_url=\\\"product_url: ${product_url}\\\"\\n\\necho $product_url\\n\")), mdx(\"p\", null, \"Generate product mapping file (\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.ibm.com/support/knowledgecenter/en/SSMNED_v10/com.ibm.apic.toolkit.doc/capim-toolkit-cli-manage-products.html\"\n  }), \"docs here for product mapping file format\"), \").\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"echo ${product_url}>product-map.txt\\necho \\\"plans:\\\">>product-map.txt\\necho \\\"- source: default\\\">>product-map.txt\\necho \\\"  target: default\\\">>product-map.txt\\n\")), mdx(\"p\", null, \"Create the new draft product, stage it, and then use it to replace the old one. \"), mdx(\"p\", null, \"Note the product given in this command is the name of the product that will replace the old product. The product identified in the mapping file is the product being replaced.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"# Stage new product\\napic products:publish --server $api_mgmt --catalog $catalog --org $org --stage example-yamls/branch-product-2.0.0.yaml\\n\\n# Replace published 1.0.0 product with staged 2.0.0 product\\napic products:replace --server $api_mgmt --org $org --scope catalog --catalog sandbox find-branch-product:2.0.0 product-map.txt\\n\")), mdx(\"h3\", null, \"Create Another New API/Product\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"apic draft-apis:create --server $api_mgmt --org $org example-yamls/find-branch-api-3.0.0.yaml\\napic draft-products:create --server $api_mgmt --org $org example-yamls/branch-product-3.0.0.yaml\\napic products:publish --server $api_mgmt --catalog $catalog --org $org example-yamls/branch-product-3.0.0.yaml\\n\")), mdx(\"h3\", null, \"Download APIs and Products\"), mdx(\"p\", null, \"Download APIs and Products from the catalog. Use the flag \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--output\"), \" to specify where to save the files, or\\nshow in standard output (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"--output -\"), \").\"), mdx(\"p\", null, \"Get single API\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"# List all APIs in the catalog\\napic apis:list-all --server $api_mgmt --org $org --catalog $catalog --scope catalog\\n\\n# Download single API from the catalog - this will create a file locally called findbranch_2.0.0.yaml\\napic apis:get --server $api_mgmt --org $org --catalog $catalog --scope catalog findbranch:2.0.0\\n\\n# Download the same API without saving to file (Add --output -) flag\\napic apis:get --server $api_mgmt --org $org --catalog $catalog --scope catalog findbranch:2.0.0 --output -\\n\\n\")), mdx(\"p\", null, \"Download all Products and APIs\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"# Download ALL APIs in the catalog into a directory\\nmkdir ./api-dump\\napic apis:clone --server $api_mgmt --org $org --catalog $catalog --scope catalog --output api-dump\\n\\n# Download ALL Products in the catalog\\napic products:clone --server $api_mgmt --org $org --catalog $catalog --scope catalog --output api-dump\\n\")), mdx(\"h3\", null, \"Add Third OAuth Provider\"), mdx(\"p\", null, \"Modify the URLs and other properties as needed, and run the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"create\"), \" command.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"apic oauth-providers:create --server $api_mgmt --org $org setup-yamls/third-party-oauth-okta.yaml\\n\")), mdx(\"h3\", null, \"Cloud Manager Mail Server\"), mdx(\"p\", null, \"List out existing mail servers\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"apic mail-servers:list --server $cloud_mgmt --org admin\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#apic-cli-cheatsheet","title":"APIC CLI Cheatsheet"},{"url":"#scripting-commands","title":"Scripting Commands"},{"url":"#login","title":"Login","items":[{"url":"#realm","title":"Realm"},{"url":"#api-manager","title":"API Manager"},{"url":"#cloud-manager","title":"Cloud Manager"},{"url":"#sso-oidc-registry-types","title":"SSO (OIDC Registry Types)"}]},{"url":"#working-with-apis","title":"Working with APIs"},{"url":"#creating-draft-api","title":"Creating Draft API"},{"url":"#creating-draft-product-and-publishing","title":"Creating Draft Product and Publishing"},{"url":"#replacing-the-product","title":"Replacing the Product"},{"url":"#create-another-new-apiproduct","title":"Create Another New API/Product"},{"url":"#download-apis-and-products","title":"Download APIs and Products"},{"url":"#add-third-oauth-provider","title":"Add Third OAuth Provider"},{"url":"#cloud-manager-mail-server","title":"Cloud Manager Mail Server"}]},"parent":{"__typename":"File","relativePath":"apic/apic-cli.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/codeblock","title":"Syntax Highlighting"}}},{"node":{"fields":{"slug":"/","title":"Landing Page"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/apic/apic-cli","title":"Apic Cli"}}},{"node":{"fields":{"slug":"/apic/apic-use-case-resources","title":"Apic Use Case Resources"}}},{"node":{"fields":{"slug":"/apic/third-part-oauth-okta","title":"Third Part Oauth Okta"}}},{"node":{"fields":{"slug":"/codeblock/1-index.md","title":"Sub Page"}}},{"node":{"fields":{"slug":"/es-stretch-cluster-sol/README","title":"README"}}},{"node":{"fields":{"slug":"/mq-portworx/multiinstance","title":"Multiinstance"}}},{"node":{"fields":{"slug":"/mq-uniform-cluster/README","title":"README"}}},{"node":{"fields":{"slug":"/ace-es/ace-esv10-v2020.2/ace-esv10-v2020.2","title":"Ace Esv 10 V 2020 2"}}},{"node":{"fields":{"slug":"/ace-mq-tls/ace-mqv9.1.5-r2-tls-v2020.2/Create KDB","title":"Create KDB"}}},{"node":{"fields":{"slug":"/ace-mq-tls/ace-mqv9.1.5-r2-tls-v2020.2/ace-mqv9.1.5-r2-tls-v2020.2","title":"Ace Mqv 9 1 5 R 2 Tls V 2020 2"}}},{"node":{"fields":{"slug":"/ace-oracledb/ace-oracledb-v2020.2/ace-oracledb-v2020.2","title":"Ace Oracledb V 2020 2"}}},{"node":{"fields":{"slug":"/ace-soap-create-route-ocp/ace-soap-v2020.2/ace-soap-v2020.2","title":"Ace Soap V 2020 2"}}},{"node":{"fields":{"slug":"/apic-v10-eks/README","title":"README"}}},{"node":{"fields":{"slug":"/es-mq/esv10-mq-v2020.2/esv10-mq-v2020.2","title":"Esv 10 Mq V 2020 2"}}}]}},"pageContext":{"id":"2de08cf3-6b61-5ab7-a6de-92fb65fb4421"}},"staticQueryHashes":["2619113677","2619113677","3706406642","3706406642","417421954","417421954"]}
{"componentChunkName":"component---src-templates-docs-js","path":"/mq-portworx/multiinstance","result":{"data":{"site":{"siteMetadata":{"title":"Cloud Pak for Integration | IBM","docsLocation":"https://github.com/ibm-cloud-architecture/cloudpak-for-integration"}},"mdx":{"fields":{"id":"52e4a7e4-0243-5739-9772-8395a8a4b610","title":"Multiinstance","slug":"/mq-portworx/multiinstance"},"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Portworx Storage for MultiInstance QueueManager's\"), mdx(\"p\", null, \"Starting from CP4I 2020.3 Portworx Storage Version 2.5.5 is \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.ibm.com/support/knowledgecenter/en/SSGT7J_20.3/install/sysreqs.html#icip_sysreqs__file\"\n  }), \"offically supported\")), mdx(\"p\", null, \"However, for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MultiInstance\"), \" QueManager's where there is a requirment for \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"Shared\"), \" File Storage the default Portworx \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"StorageClass\"), \" will not be sufficient:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"kind: StorageClass\\nmetadata:\\n  labels:\\n    app.kubernetes.io/instance: portworx\\n    app.kubernetes.io/managed-by: Helm\\n    app.kubernetes.io/name: portworx-portworx\\n    helm.sh/chart: portworx-1.0.21\\n  name: portworx-shared-sc\\nparameters:\\n  repl: \\\"3\\\"\\n  shared: \\\"true\\\"\\nprovisioner: kubernetes.io/portworx-volume\\nreclaimPolicy: Delete\\nvolumeBindingMode: Immediate\\n\")), mdx(\"p\", null, \"You must enable \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"nfsv_4\"), \" to work with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MultiInstance\"), \" QM's like so:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"kind: StorageClass\\napiVersion: storage.k8s.io/v1\\nmetadata:\\n  name: portworx-shared-sc3\\nprovisioner: kubernetes.io/portworx-volume\\nparameters:\\n  io_profile: db_remote\\n  nfs_v4: 'true'\\n  repl: '3'\\n  sharedv4: 'true'\\nreclaimPolicy: Delete\\nvolumeBindingMode: Immediate\\n\")), mdx(\"p\", null, \"A major advantage of working with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Portworx Storage\"), \" is that it can replicate data across \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Availability Zones\"), \".\"), mdx(\"p\", null, \"This means if you have a \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Multi AZ\"), \" Cluster, Kubernetes will schedule the Active/Passive pod pair into different Zones and they can still share the same \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PVC's\"), \" for failover since the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PVC's\"), \" backing the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MultiInstance\"), \" pods will be replicated across \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Availability Zones\")), mdx(\"p\", null, \"Here is an example of how to use the Storage Class for \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MultiInstance\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"apiVersion: mq.ibm.com/v1beta1\\nkind: QueueManager\\nmetadata:\\n  name: miqm\\n  namespace: cp4i\\nspec:\\n  license:\\n    accept: true\\n    license: L-RJON-BN7PN3\\n    metric: ProcessorValueUnit\\n    use: NonProduction\\n  web:\\n    enabled: true\\n  version: 9.2.0.0-r2\\n  queueManager:\\n    metrics:\\n      enabled: true\\n    name: miqm\\n    availability:\\n      type: MultiInstance\\n    storage:\\n      persistedData:\\n        class: portworx-shared-sc3\\n        enabled: true\\n        type: persistent-claim\\n      queueManager:\\n        class: portworx-shared-sc3\\n        type: persistent-claim\\n      recoveryLogs:\\n        class: portworx-shared-sc3\\n        enabled: true\\n        type: persistent-claim\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#portworx-storage-for-multiinstance-queuemanagers","title":"Portworx Storage for MultiInstance QueueManager's"}]},"parent":{"__typename":"File","relativePath":"mq-portworx/multiinstance.md"},"frontmatter":{"metaTitle":null,"metaDescription":null}},"allMdx":{"edges":[{"node":{"fields":{"slug":"/codeblock","title":"Syntax Highlighting"}}},{"node":{"fields":{"slug":"/","title":"Landing Page"}}},{"node":{"fields":{"slug":"/introduction","title":"Introduction"}}},{"node":{"fields":{"slug":"/apic/apic-cli","title":"Apic Cli"}}},{"node":{"fields":{"slug":"/apic/apic-use-case-resources","title":"Apic Use Case Resources"}}},{"node":{"fields":{"slug":"/apic/third-part-oauth-okta","title":"Third Part Oauth Okta"}}},{"node":{"fields":{"slug":"/codeblock/1-index.md","title":"Sub Page"}}},{"node":{"fields":{"slug":"/es-stretch-cluster-sol/README","title":"README"}}},{"node":{"fields":{"slug":"/mq-portworx/multiinstance","title":"Multiinstance"}}},{"node":{"fields":{"slug":"/mq-uniform-cluster/README","title":"README"}}},{"node":{"fields":{"slug":"/ace-es/ace-esv10-v2020.2/ace-esv10-v2020.2","title":"Ace Esv 10 V 2020 2"}}},{"node":{"fields":{"slug":"/ace-mq-tls/ace-mqv9.1.5-r2-tls-v2020.2/Create KDB","title":"Create KDB"}}},{"node":{"fields":{"slug":"/ace-mq-tls/ace-mqv9.1.5-r2-tls-v2020.2/ace-mqv9.1.5-r2-tls-v2020.2","title":"Ace Mqv 9 1 5 R 2 Tls V 2020 2"}}},{"node":{"fields":{"slug":"/ace-oracledb/ace-oracledb-v2020.2/ace-oracledb-v2020.2","title":"Ace Oracledb V 2020 2"}}},{"node":{"fields":{"slug":"/ace-soap-create-route-ocp/ace-soap-v2020.2/ace-soap-v2020.2","title":"Ace Soap V 2020 2"}}},{"node":{"fields":{"slug":"/apic-v10-eks/README","title":"README"}}},{"node":{"fields":{"slug":"/es-mq/esv10-mq-v2020.2/esv10-mq-v2020.2","title":"Esv 10 Mq V 2020 2"}}}]}},"pageContext":{"id":"52e4a7e4-0243-5739-9772-8395a8a4b610"}},"staticQueryHashes":["2619113677","2619113677","3706406642","3706406642","417421954","417421954"]}